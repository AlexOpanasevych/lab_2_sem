/* ----------------------------------------------------------------<Header>-
 Name: 9.cpp
 Title: Задача 3.9.
 Group: TI-81
 Student: Opanasevich O.B.
 Written: 2019-02-28
 Revised: ____-__-__
 Description:  Создайте класс who. Конструктор who должен иметь один символьный
аргумент, который будет использоваться для идентификации объекта. При создании
объекта конструктор должен выводить на экран сообщение:
Constructing who #x
где х — идентифицирующий символ, свой для каждого объекта. При удалении объекта на
экран должно выводиться сообщение:
Destroying who #x
где х — снова идентифицирующий символ. Наконец, создайте функцию make_who(),
которая возвращает объект who. Присвойте каждому объекту уникальное имя.
Проанализируйте и объясните выводимый на экран результат работы программы.
Ответ внизу.
 ------------------------------------------------------------------</Header>-*/

#include <iostream>

using namespace std;

class who{
    char idx;
    public:
        who(char idx);
        ~who();
        char make_who();        
};
who::who(char idx){
    this->idx = idx;
    cout << "Constructing who #" << idx << endl;
}

who::~who(){
    cout << "Destroing who #" << idx << endl;
}

char who::make_who(){
    return idx;
}

int main(){
    who a('A');
    who b('B');
    who c('C');
    who d('D');
    who e('E');
    return 0;
}

// при каждом обьявлении класса и передаваемого значения в конструктор (его уникальный символ) запускается конструктор,
// который инициализирует все переменные и методы класса, после выполнения программы запускается деструктор, 
// причем начиная с последнего обьявленного класса